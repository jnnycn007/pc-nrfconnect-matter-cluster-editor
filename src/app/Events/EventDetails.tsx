/*
 * Copyright (c) 2025 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-4-Clause
 */

import * as React from 'react';

import DetailsBox from '../Components/Details/DetailsBox';
import { XMLEvent } from '../defines';

/**
 * Implementation of content for DetailBox component dedicated to XMLEvent.
 *
 * The EventDetails component displays detailed information about Matter events in a structured format.
 * It is a presentation component that renders event metadata including description and field definitions
 * when the user expands an event row in the EventsTable.
 *
 * This component is part of the Matter Manufacturer Cluster Editor application, which allows users
 * to view, edit, and manage Matter events defined in cluster XML files. Events in Matter are
 * notifications that devices can generate to inform other devices about state changes or important
 * occurrences.
 *
 * Component hierarchy:
 * - EventsTable uses EventDetails to render expanded event details
 * - EventDetails uses DetailsBox as its container component
 *
 * The component organizes event data to show:
 * - Event description at the top (when available)
 * - Fields that are included in the event payload, with their names and data types
 *
 * The field data is particularly important as it defines the structure of information that
 * will be transmitted when the event is generated by a Matter device.
 *
 * @param {Object} props - The input props for the component.
 * @param {string} props.description - The description of the event.
 * @param {Array} props.field - An array of field objects associated with the event.
 * @param {Object} props.field.$ - The field object.
 * @param {string} props.field.$.name - The name of the field.
 * @param {string} props.field.$.type - The type of the field.
 *
 * @returns {JSX.Element} The rendered EventDetails component.
 */
const EventDetails: React.FC<XMLEvent> = ({ description, field }) => (
    <DetailsBox
        description={description}
        innerElements={[
            {
                name: 'Field',
                element:
                    field?.map(f => ({
                        id: f.$.id,
                        name: f.$.name,
                        type: f.$.type,
                        array: f.$.array,
                    })) || [],
                size: 'm',
            },
        ]}
    />
);

export default EventDetails;
